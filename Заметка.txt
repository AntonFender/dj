1)Установили django-2.0.7 (pip install django==2.0.7)

2)Создали проект django-admin startproject blogengine в папке app
    В папке app есть папка blogengine - это контейнер для всего нашего проекта
    В папке blogengine есть дочерняя папка blogengine - это папка с настрйками для всего нашего проекта

3)Каждый проект джанго состоит из приложений. Каждое такое приложение представляет собой некий изолированые кусок
функциональности, фитчи нашего проекта(Например: система комментариев это одно приложение, система для оплаты - это
другое приложение).У этих приложений слабая связанность, поэтому их легко можно перенести в другой проект джанго

4)Создадим приложение blog. Делается это с помощью manage.py.
python manage.py startapp blog

5)Джанго реализует патерн проектированиея MVC(Model, View, Controller)
Мы отдельно пишем код для хранения данных в БД (Model)
Отдельно пишем код для демонстрации нашего ответа пользователю(View)
Отдельно пишем код для маршрутизации запроса его обработки. Т.е до того как
мы отобразим что-то пользователю, мы должны каким то образом провести эту обработку(Controller)

6)urls.py - Отвечает за маршрутизацию запросов пользователя, которые прилетаю к нам из браузера
views.py - Отвечает за обработку этого запроса, который прилетел к нам из боаузера
models.py - Отвечает за хранение данных в БД(Можно использовать sqlLite)

7)Чтобы запустить тестовый сервер нужно выполнить команду:
manage.py runserver 5000 (Запустили сервер на 5000 порту)

8)Дожно появится предупреждение(Что есть невыполненые миграции):
    You have 14 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contentty
    pes, sessions.
    Run 'python manage.py migrate' to apply them.
Нужно выполнить:
manage.py migrate

9)Нам нужно принять запос от браузера - пользователя к определенным страницам и передать его на обработку
в функцию обработчик. Чтобы это сделать мы начинаем редактировать urls.py из папки blogengine.

10)Далее мы создали в папке blogengine файл views.py, в котором определили функцию обработчик hello

11)Приложение blog будет обрабатывать запросы, которые идут по адресу blog/
Чтобы подключить приложение blog к проекту, нужно отредактировать settings.py в папке blogengine.
Нужно добавить в список INSTALLED_APPS наше приложение blog

12)Поговорим о функции path в urls.py.
Данная функция может принимать 4 аргумента. Два аргумента позиционных(обязательные) это шаблон URL, в
данном случае "blog/"  и функция, которая будет обрабатывать запрос по URL шаблону.
И два аргумента - это имя для данного патерна(path('blog/', hello)) и параметры дополнительные,
которые можно передать в функция в виде словаря.

13)Можно не указывать явным образом функцию обработчика(т.е hello в патерне path('blog/', hello)).
Мы можем в качестве второго аргумента для функции path передавать другой файл urls.py, который
будет проводить более детальную маршрутизацию. Потому что у приложения blog может быть много страниц(посты, тэги и.т.д).
Для того чтобы джанго указать что более детальная маршрутизация запросов будет происходить в другом файле urls.py
в приложении - мы должны использовать функцию include

14)
